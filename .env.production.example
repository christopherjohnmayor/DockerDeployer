# DockerDeployer Production Environment Configuration
# Copy this file to .env.production and update with your production values

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
ENVIRONMENT=production
DEBUG=false

# =============================================================================
# DOMAIN AND NETWORKING
# =============================================================================
DOMAIN=your-domain.com
FRONTEND_URL=https://your-domain.com
CORS_ORIGINS=https://your-domain.com

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Generate a secure secret key (use: openssl rand -hex 32)
SECRET_KEY=CHANGE_THIS_TO_A_SECURE_RANDOM_STRING_32_CHARS_MIN

# JWT Configuration (use: openssl rand -hex 32)
JWT_SECRET_KEY=CHANGE_THIS_TO_A_SECURE_JWT_SECRET_32_CHARS_MIN
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Production: Use PostgreSQL instead of SQLite
DATABASE_URL=postgresql://dockerdeployer:SECURE_PASSWORD@postgres:5432/dockerdeployer

# Alternative: MySQL
# DATABASE_URL=mysql://dockerdeployer:SECURE_PASSWORD@mysql:3306/dockerdeployer

# Development fallback (not recommended for production)
# DATABASE_URL=sqlite:///./data/dockerdeployer.db

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
REDIS_URL=redis://redis:6379
REDIS_PASSWORD=SECURE_REDIS_PASSWORD

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================
EMAIL_PROVIDER=sendgrid
EMAIL_FROM=noreply@your-domain.com
EMAIL_FROM_NAME=DockerDeployer

# SendGrid Configuration (Recommended)
SENDGRID_API_KEY=SG.YOUR_SENDGRID_API_KEY_HERE

# Gmail Configuration (Alternative)
GMAIL_USERNAME=your-email@gmail.com
GMAIL_PASSWORD=your-app-specific-password
GMAIL_SMTP_HOST=smtp.gmail.com
GMAIL_SMTP_PORT=587

# =============================================================================
# LLM CONFIGURATION
# =============================================================================
LLM_PROVIDER=openrouter
LLM_MODEL=meta-llama/llama-3.2-3b-instruct:free

# OpenRouter Configuration (Recommended)
OPENROUTER_API_URL=https://openrouter.ai/api/v1/chat/completions
OPENROUTER_API_KEY=sk-or-v1-YOUR_OPENROUTER_API_KEY_HERE

# Alternative: Local Ollama
# LLM_PROVIDER=ollama
# LLM_API_URL=http://ollama:11434/api/generate

# Alternative: Direct OpenAI
# LLM_PROVIDER=openai
# OPENAI_API_KEY=sk-YOUR_OPENAI_API_KEY_HERE

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================
CONFIG_REPO_PATH=/app/config_repo

# Docker Registry (for custom images)
DOCKER_REGISTRY=your-registry.com
DOCKER_USERNAME=your-username
DOCKER_PASSWORD=your-password

# =============================================================================
# MONITORING AND LOGGING
# =============================================================================
LOG_LEVEL=INFO
LOG_FORMAT=json

# Sentry Configuration (Optional)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# =============================================================================
# RATE LIMITING
# =============================================================================
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST_SIZE=10

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# S3 Backup Configuration (Optional)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_S3_BUCKET=your-backup-bucket
AWS_REGION=us-east-1

# =============================================================================
# SSL/TLS CONFIGURATION
# =============================================================================
SSL_ENABLED=true
SSL_CERT_PATH=/etc/ssl/certs/dockerdeployer.crt
SSL_KEY_PATH=/etc/ssl/private/dockerdeployer.key

# Let's Encrypt Configuration
LETSENCRYPT_EMAIL=admin@your-domain.com
LETSENCRYPT_STAGING=false

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================
# Database Connection Pool
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30
DB_POOL_TIMEOUT=30

# Redis Connection Pool
REDIS_POOL_SIZE=10
REDIS_POOL_TIMEOUT=5

# Worker Configuration
WORKER_PROCESSES=4
WORKER_CONNECTIONS=1000

# =============================================================================
# FEATURE FLAGS
# =============================================================================
FEATURE_METRICS_ENABLED=true
FEATURE_ALERTS_ENABLED=true
FEATURE_WEBSOCKET_ENABLED=true
FEATURE_EMAIL_ENABLED=true
FEATURE_BACKUP_ENABLED=true

# =============================================================================
# DOCKER COMPOSE OVERRIDES
# =============================================================================
# Backend Image
BACKEND_IMAGE=christopherjohnmayor/dockerdeployer-backend
BACKEND_TAG=latest

# Frontend Image
FRONTEND_IMAGE=christopherjohnmayor/dockerdeployer-frontend
FRONTEND_TAG=latest

# Database Image
POSTGRES_IMAGE=postgres:15-alpine
POSTGRES_DB=dockerdeployer
POSTGRES_USER=dockerdeployer
POSTGRES_PASSWORD=SECURE_DATABASE_PASSWORD

# Redis Image
REDIS_IMAGE=redis:7-alpine

# =============================================================================
# HEALTH CHECK CONFIGURATION
# =============================================================================
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3
HEALTH_CHECK_START_PERIOD=30s

# =============================================================================
# SECURITY HEADERS
# =============================================================================
SECURITY_HEADERS_ENABLED=true
HSTS_MAX_AGE=31536000
CSP_ENABLED=true
X_FRAME_OPTIONS=DENY
X_CONTENT_TYPE_OPTIONS=nosniff

# =============================================================================
# ANALYTICS AND TRACKING (Optional)
# =============================================================================
ANALYTICS_ENABLED=false
GOOGLE_ANALYTICS_ID=GA-XXXXXXXXX-X

# =============================================================================
# MAINTENANCE MODE
# =============================================================================
MAINTENANCE_MODE=false
MAINTENANCE_MESSAGE="DockerDeployer is currently under maintenance. Please try again later."

# =============================================================================
# NOTES
# =============================================================================
# 1. Replace all placeholder values with actual production values
# 2. Use strong, unique passwords for all services
# 3. Generate secure random keys for SECRET_KEY and JWT_SECRET_KEY
# 4. Configure proper SSL certificates for HTTPS
# 5. Set up monitoring and alerting for production
# 6. Configure regular backups
# 7. Review and test all configurations before deployment
# 8. Keep this file secure and never commit it to version control
