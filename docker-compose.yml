version: "3.8"

services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dockerdeployer-backend
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - db_data:/app/data
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=sqlite:///./data/dockerdeployer.db
      - SECRET_KEY=dev_secret_key_change_in_production
      - CONFIG_REPO_PATH=/app/config_repo
      - CORS_ORIGINS=http://localhost:3000,http://frontend:3000
    ports:
      - "8000:8000"
    restart: unless-stopped
    # Running as root for Docker socket access - this is intentional for Docker management
    # Use Python-based health check instead of curl
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Frontend service
  frontend:
    image: node:18-alpine
    container_name: dockerdeployer-frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    command: sh -c "apk add --no-cache wget && npm install && npm run dev"
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "sh",
          "-c",
          "wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  db_data:
